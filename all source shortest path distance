#include<bits/stdc++.h>
using namespace std ;
void floyd_warshall(vector<vector<int>>&graph,int size)
{
    for(int i=0;i<size;i++)
    {
        for(int j=0;j<size;j++)
        {
            if(graph[i][j]==-1)
            {
                graph[i][j]=INT_MAX;
            }
        }
    }
    for(int k=0;k<size;k++)
    {
        for(int i=0;i<size;i++)
        {
            for(int j=0;j<size;j++)
            {
                if(graph[i][k]==INT_MAX||graph[k][j]==INT_MAX)continue;
                graph[i][j]=min(graph[i][j],graph[i][k]+graph[k][j]);
            }
        }
    }
    for(int i=0;i<size;i++)
    {
        for(int j=0;j<size;j++)
        {
            if(graph[i][j]==INT_MAX)
            {
                graph[i][j]==-1;
            }
        }
    }
}

int main()
{
    int size;
    cin>>size;
    vector<vector<int>>graph(size,vector<int>(size));
    cout<<"enter elements of matrix";
    for(int i=0;i<size;i++)
    {
        for(int j=0;j<size;j++)
        {
            cin>>graph[i][j];
        }
    }
    floyd_warshall(graph,size);
    cout<<"shortest paths are as follows";
    for(int i=0;i<size;i++)
    {
        for(int j=0;j<size;j++)
        {
            cout<<graph[i][j]<<" ";
        }
        cout<<endl;
    }
    return 0;
}
