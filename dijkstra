#include<iostream>
#include<vector>
using namespace std;
vector<int>dijkstra(int v,vector<vector<int>>adj[],int src)
{
    vector<bool>explored(v,0);
    vector<int>dist(v,INT_MAX);
    dist[src]=0;
    int node=-1;
    int value=INT_MAX;
    int count=v;
    while(count--)
    {
        for(int i=0;i<v;i++)
        {
            if(!explored[i]&&value>dist[i])
            {
                node=i;
                value=dist[i];
            }
        }
        explored[node]=1;
        for(int j=0;j<adj[node].size();j++)
        {
            int neighbour=adj[node][j][0];
            int weight=adj[node][j][1];
            if(!explored[neighbour]&&dist[node]+weight<dist[neighbour])
            {
                dist[neighbour]=dist[node]+weight;
            }
        }
    }
    return dist;

}
int main()
{
    int src=2;

    vector<vector<int>>adj[3];
    adj[0].push_back({1,1});
    adj[0].push_back({2,6});
    adj[1].push_back({2,3});
    adj[1].push_back({0,1});
    adj[2].push_back({1,3});
    adj[2].push_back({0,6});
    
    vector<int>ans;
    ans=dijkstra(3,adj,src);
    for(int i=0;i<ans.size();i++)
    {
        cout<<ans[i]<<" ";
    }
    return 0;

}
